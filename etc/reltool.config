%% -*- mode: erlang -*-
%% See https://github.com/erlang/otp/blob/maint/lib/reltool/src/reltool.hrl
%% for default filters when using profile embedded

%% release types: Type | Release Name | Node Name | Setup Module
%% default_nodes: Default set of node types
%% setup_config: Release Name | Setup Application | Setup Module
{builderl,
 [{default_repo_base, "https://github.com/builderl"},
  {setup_config, "cmd", builderl_sample_setup, cmd_config},
  {make_profiles,
   [{default,
     [{make_options,
       [
        %%{pa, "deps/lager/ebin"}
        %%,{mk_plugin, "lib/deploy/src/deps_make"}
       ]},
      {erl,
       [verbose, debug_info, return, {i, "lib"}, {i, "deps"}
       %%,{parse_transform, lager_transform}
       ]}]},
    {test,
     [{make_options,
       [{spa, "test"}]},
      {erl,
       [{d, 'TEST'}, {d, 'DEBUG'}]}]}
   ]},
  {boot_version, "sc-0.1.0"},
  {release_types,
   [{sc, "rel_sc", "sc", sc_config, 0},
    {htif, "rel_http_if", "http_if", htif_config, 10},
    {tcif, "rel_tcp_if", "tcp_if", tcif_config, 20}
   ]},
  {default_nodes,
   ["sc-1", "sc-2", "htif", "tcif"]},
  %% {default_joins,
  %%  [{join, [{bbb, "1"}, {bbb, "2"}]},
  %%   {join, [{ccc, "3"}, {ccc, "4"}, {ccc, "5"}]}]}
  {default_joins,
   [{join, [{sc, "1"}, {sc, "2"}]}]}
 ]
}.

{config,
 {sys,
  [{lib_dirs, ["lib", "deps"]},
   {incl_cond, exclude},

   {app, kernel,                [{incl_cond, include}]},
   {app, stdlib,                [{incl_cond, include}]},
   {app, sasl,                  [{incl_cond, include}]},
   {app, mnesia,                [{incl_cond, include}]},
   {app, migresia,              [{incl_cond, include}]},
   {app, builderl,              [{incl_cond, include}]},
   {app, builderl_sample_setup, [{incl_cond, include}]},
   {app, resource_discovery,    [{incl_cond, include}]},
   {app, simple_cache,          [{incl_cond, include}]},
   {app, http_interface,        [{incl_cond, include}]},
   {app, tcp_interface,         [{incl_cond, include}]},

   {rel, "cmd", "sc-0.1.0",
    [kernel,
     stdlib,
     sasl,
     builderl_sample_setup,
     {mnesia,                   load},
     {migresia,                 load},
     {resource_discovery,       load},
     {simple_cache,             load},
     {http_interface,           load},
     {tcp_interface,            load}
    ]},

   {boot_rel, "cmd"},
   {profile, embedded}
  ]}
}.

{config,
 {sys,
  [{lib_dirs, ["lib", "deps"]},
   {incl_cond, exclude},

   {app, kernel,                [{incl_cond, include}]},
   {app, stdlib,                [{incl_cond, include}]},
   {app, sasl,                  [{incl_cond, include}]},
   {app, mnesia,                [{incl_cond, include}]},
   {app, migresia,              [{incl_cond, include}]},
   {app, resource_discovery,    [{incl_cond, include}]},
   {app, simple_cache,          [{incl_cond, include}]},
   {app, recon,                 [{incl_cond, include}]},

   {rel, "rel_sc", "sc-0.1.0",
    [kernel,
     stdlib,
     sasl,
     mnesia,
     resource_discovery,
     {migresia,                 temporary},
     {recon,                    temporary},
     {simple_cache,             temporary}
    ]},

   {boot_rel, "rel_sc"},
   {profile, embedded}
  ]}
}.

{config,
 {sys,
  [{lib_dirs, ["lib", "deps"]},
   {incl_cond, exclude},

   {app, kernel,                [{incl_cond, include}]},
   {app, stdlib,                [{incl_cond, include}]},
   {app, sasl,                  [{incl_cond, include}]},
   {app, http_interface,        [{incl_cond, include}]},
   {app, recon,                 [{incl_cond, include}]},

   {rel, "rel_http_if", "sc-0.1.0",
    [kernel,
     stdlib,
     sasl,
     http_interface,
     {recon,                    temporary}
    ]},

   {boot_rel, "rel_http_if"},
   {profile, embedded}
  ]}
}.

{config,
 {sys,
  [{lib_dirs, ["lib", "deps"]},
   {incl_cond, exclude},

   {app, kernel,                [{incl_cond, include}]},
   {app, stdlib,                [{incl_cond, include}]},
   {app, sasl,                  [{incl_cond, include}]},
   {app, tcp_interface,         [{incl_cond, include}]},
   {app, recon,                 [{incl_cond, include}]},

   {rel, "rel_tcp_if", "sc-0.1.0",
    [kernel,
     stdlib,
     sasl,
     tcp_interface,
     {recon,                    temporary}
    ]},

   {boot_rel, "rel_tcp_if"},
   {profile, embedded}
  ]}
}.
